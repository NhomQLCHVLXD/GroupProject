#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_CHVLXD")]
	public partial class QL_CHVLXDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHITIET_HD_NHAP(CHITIET_HD_NHAP instance);
    partial void UpdateCHITIET_HD_NHAP(CHITIET_HD_NHAP instance);
    partial void DeleteCHITIET_HD_NHAP(CHITIET_HD_NHAP instance);
    partial void InsertCHITIET_HD_XUAT(CHITIET_HD_XUAT instance);
    partial void UpdateCHITIET_HD_XUAT(CHITIET_HD_XUAT instance);
    partial void DeleteCHITIET_HD_XUAT(CHITIET_HD_XUAT instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertDONVITINH(DONVITINH instance);
    partial void UpdateDONVITINH(DONVITINH instance);
    partial void DeleteDONVITINH(DONVITINH instance);
    partial void InsertHANGHOA(HANGHOA instance);
    partial void UpdateHANGHOA(HANGHOA instance);
    partial void DeleteHANGHOA(HANGHOA instance);
    partial void InsertHD_NHAP(HD_NHAP instance);
    partial void UpdateHD_NHAP(HD_NHAP instance);
    partial void DeleteHD_NHAP(HD_NHAP instance);
    partial void InsertHD_XUAT(HD_XUAT instance);
    partial void UpdateHD_XUAT(HD_XUAT instance);
    partial void DeleteHD_XUAT(HD_XUAT instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAIHANG(LOAIHANG instance);
    partial void UpdateLOAIHANG(LOAIHANG instance);
    partial void DeleteLOAIHANG(LOAIHANG instance);
    partial void InsertLOAIKHACH(LOAIKHACH instance);
    partial void UpdateLOAIKHACH(LOAIKHACH instance);
    partial void DeleteLOAIKHACH(LOAIKHACH instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    #endregion
		
		public QL_CHVLXDDataContext() : 
				base(global::DTO.Properties.Settings.Default.QL_CHVLXDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_CHVLXDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_CHVLXDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_CHVLXDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_CHVLXDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHITIET_HD_NHAP> CHITIET_HD_NHAPs
		{
			get
			{
				return this.GetTable<CHITIET_HD_NHAP>();
			}
		}
		
		public System.Data.Linq.Table<CHITIET_HD_XUAT> CHITIET_HD_XUATs
		{
			get
			{
				return this.GetTable<CHITIET_HD_XUAT>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<DONVITINH> DONVITINHs
		{
			get
			{
				return this.GetTable<DONVITINH>();
			}
		}
		
		public System.Data.Linq.Table<HANGHOA> HANGHOAs
		{
			get
			{
				return this.GetTable<HANGHOA>();
			}
		}
		
		public System.Data.Linq.Table<HD_NHAP> HD_NHAPs
		{
			get
			{
				return this.GetTable<HD_NHAP>();
			}
		}
		
		public System.Data.Linq.Table<HD_XUAT> HD_XUATs
		{
			get
			{
				return this.GetTable<HD_XUAT>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAIHANG> LOAIHANGs
		{
			get
			{
				return this.GetTable<LOAIHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAIKHACH> LOAIKHACHes
		{
			get
			{
				return this.GetTable<LOAIKHACH>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIET_HD_NHAP")]
	public partial class CHITIET_HD_NHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_HD_NHAP;
		
		private string _MAHH;
		
		private System.Nullable<double> _SOLUONG_NHAP;
		
		private string _DVTINH;
		
		private System.Nullable<double> _DONGIA_NHAP;
		
		private System.Nullable<double> _THANHTIEN;
		
		private EntityRef<HANGHOA> _HANGHOA;
		
		private EntityRef<HD_NHAP> _HD_NHAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_HD_NHAPChanging(string value);
    partial void OnMA_HD_NHAPChanged();
    partial void OnMAHHChanging(string value);
    partial void OnMAHHChanged();
    partial void OnSOLUONG_NHAPChanging(System.Nullable<double> value);
    partial void OnSOLUONG_NHAPChanged();
    partial void OnDVTINHChanging(string value);
    partial void OnDVTINHChanged();
    partial void OnDONGIA_NHAPChanging(System.Nullable<double> value);
    partial void OnDONGIA_NHAPChanged();
    partial void OnTHANHTIENChanging(System.Nullable<double> value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public CHITIET_HD_NHAP()
		{
			this._HANGHOA = default(EntityRef<HANGHOA>);
			this._HD_NHAP = default(EntityRef<HD_NHAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_HD_NHAP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_HD_NHAP
		{
			get
			{
				return this._MA_HD_NHAP;
			}
			set
			{
				if ((this._MA_HD_NHAP != value))
				{
					if (this._HD_NHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_HD_NHAPChanging(value);
					this.SendPropertyChanging();
					this._MA_HD_NHAP = value;
					this.SendPropertyChanged("MA_HD_NHAP");
					this.OnMA_HD_NHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHH
		{
			get
			{
				return this._MAHH;
			}
			set
			{
				if ((this._MAHH != value))
				{
					if (this._HANGHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHHChanging(value);
					this.SendPropertyChanging();
					this._MAHH = value;
					this.SendPropertyChanged("MAHH");
					this.OnMAHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG_NHAP", DbType="Float")]
		public System.Nullable<double> SOLUONG_NHAP
		{
			get
			{
				return this._SOLUONG_NHAP;
			}
			set
			{
				if ((this._SOLUONG_NHAP != value))
				{
					this.OnSOLUONG_NHAPChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG_NHAP = value;
					this.SendPropertyChanged("SOLUONG_NHAP");
					this.OnSOLUONG_NHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVTINH", DbType="NVarChar(50)")]
		public string DVTINH
		{
			get
			{
				return this._DVTINH;
			}
			set
			{
				if ((this._DVTINH != value))
				{
					this.OnDVTINHChanging(value);
					this.SendPropertyChanging();
					this._DVTINH = value;
					this.SendPropertyChanged("DVTINH");
					this.OnDVTINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA_NHAP", DbType="Float")]
		public System.Nullable<double> DONGIA_NHAP
		{
			get
			{
				return this._DONGIA_NHAP;
			}
			set
			{
				if ((this._DONGIA_NHAP != value))
				{
					this.OnDONGIA_NHAPChanging(value);
					this.SendPropertyChanging();
					this._DONGIA_NHAP = value;
					this.SendPropertyChanged("DONGIA_NHAP");
					this.OnDONGIA_NHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Float")]
		public System.Nullable<double> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CHITIET_HD_NHAP", Storage="_HANGHOA", ThisKey="MAHH", OtherKey="MAHH", IsForeignKey=true)]
		public HANGHOA HANGHOA
		{
			get
			{
				return this._HANGHOA.Entity;
			}
			set
			{
				HANGHOA previousValue = this._HANGHOA.Entity;
				if (((previousValue != value) 
							|| (this._HANGHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGHOA.Entity = null;
						previousValue.CHITIET_HD_NHAPs.Remove(this);
					}
					this._HANGHOA.Entity = value;
					if ((value != null))
					{
						value.CHITIET_HD_NHAPs.Add(this);
						this._MAHH = value.MAHH;
					}
					else
					{
						this._MAHH = default(string);
					}
					this.SendPropertyChanged("HANGHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HD_NHAP_CHITIET_HD_NHAP", Storage="_HD_NHAP", ThisKey="MA_HD_NHAP", OtherKey="MA_HD_NHAP", IsForeignKey=true)]
		public HD_NHAP HD_NHAP
		{
			get
			{
				return this._HD_NHAP.Entity;
			}
			set
			{
				HD_NHAP previousValue = this._HD_NHAP.Entity;
				if (((previousValue != value) 
							|| (this._HD_NHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HD_NHAP.Entity = null;
						previousValue.CHITIET_HD_NHAPs.Remove(this);
					}
					this._HD_NHAP.Entity = value;
					if ((value != null))
					{
						value.CHITIET_HD_NHAPs.Add(this);
						this._MA_HD_NHAP = value.MA_HD_NHAP;
					}
					else
					{
						this._MA_HD_NHAP = default(string);
					}
					this.SendPropertyChanged("HD_NHAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIET_HD_XUAT")]
	public partial class CHITIET_HD_XUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_HD_XUAT;
		
		private string _MAHH;
		
		private System.Nullable<double> _SOLUONG_XUAT;
		
		private string _DVTINH;
		
		private System.Nullable<double> _DONGIA_XUAT;
		
		private System.Nullable<double> _THANHTIEN;
		
		private EntityRef<HANGHOA> _HANGHOA;
		
		private EntityRef<HD_XUAT> _HD_XUAT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_HD_XUATChanging(string value);
    partial void OnMA_HD_XUATChanged();
    partial void OnMAHHChanging(string value);
    partial void OnMAHHChanged();
    partial void OnSOLUONG_XUATChanging(System.Nullable<double> value);
    partial void OnSOLUONG_XUATChanged();
    partial void OnDVTINHChanging(string value);
    partial void OnDVTINHChanged();
    partial void OnDONGIA_XUATChanging(System.Nullable<double> value);
    partial void OnDONGIA_XUATChanged();
    partial void OnTHANHTIENChanging(System.Nullable<double> value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public CHITIET_HD_XUAT()
		{
			this._HANGHOA = default(EntityRef<HANGHOA>);
			this._HD_XUAT = default(EntityRef<HD_XUAT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_HD_XUAT", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_HD_XUAT
		{
			get
			{
				return this._MA_HD_XUAT;
			}
			set
			{
				if ((this._MA_HD_XUAT != value))
				{
					if (this._HD_XUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMA_HD_XUATChanging(value);
					this.SendPropertyChanging();
					this._MA_HD_XUAT = value;
					this.SendPropertyChanged("MA_HD_XUAT");
					this.OnMA_HD_XUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHH
		{
			get
			{
				return this._MAHH;
			}
			set
			{
				if ((this._MAHH != value))
				{
					if (this._HANGHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHHChanging(value);
					this.SendPropertyChanging();
					this._MAHH = value;
					this.SendPropertyChanged("MAHH");
					this.OnMAHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG_XUAT", DbType="Float")]
		public System.Nullable<double> SOLUONG_XUAT
		{
			get
			{
				return this._SOLUONG_XUAT;
			}
			set
			{
				if ((this._SOLUONG_XUAT != value))
				{
					this.OnSOLUONG_XUATChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG_XUAT = value;
					this.SendPropertyChanged("SOLUONG_XUAT");
					this.OnSOLUONG_XUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVTINH", DbType="NVarChar(50)")]
		public string DVTINH
		{
			get
			{
				return this._DVTINH;
			}
			set
			{
				if ((this._DVTINH != value))
				{
					this.OnDVTINHChanging(value);
					this.SendPropertyChanging();
					this._DVTINH = value;
					this.SendPropertyChanged("DVTINH");
					this.OnDVTINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA_XUAT", DbType="Float")]
		public System.Nullable<double> DONGIA_XUAT
		{
			get
			{
				return this._DONGIA_XUAT;
			}
			set
			{
				if ((this._DONGIA_XUAT != value))
				{
					this.OnDONGIA_XUATChanging(value);
					this.SendPropertyChanging();
					this._DONGIA_XUAT = value;
					this.SendPropertyChanged("DONGIA_XUAT");
					this.OnDONGIA_XUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Float")]
		public System.Nullable<double> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CHITIET_HD_XUAT", Storage="_HANGHOA", ThisKey="MAHH", OtherKey="MAHH", IsForeignKey=true)]
		public HANGHOA HANGHOA
		{
			get
			{
				return this._HANGHOA.Entity;
			}
			set
			{
				HANGHOA previousValue = this._HANGHOA.Entity;
				if (((previousValue != value) 
							|| (this._HANGHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGHOA.Entity = null;
						previousValue.CHITIET_HD_XUATs.Remove(this);
					}
					this._HANGHOA.Entity = value;
					if ((value != null))
					{
						value.CHITIET_HD_XUATs.Add(this);
						this._MAHH = value.MAHH;
					}
					else
					{
						this._MAHH = default(string);
					}
					this.SendPropertyChanged("HANGHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HD_XUAT_CHITIET_HD_XUAT", Storage="_HD_XUAT", ThisKey="MA_HD_XUAT", OtherKey="MA_HD_XUAT", IsForeignKey=true)]
		public HD_XUAT HD_XUAT
		{
			get
			{
				return this._HD_XUAT.Entity;
			}
			set
			{
				HD_XUAT previousValue = this._HD_XUAT.Entity;
				if (((previousValue != value) 
							|| (this._HD_XUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HD_XUAT.Entity = null;
						previousValue.CHITIET_HD_XUATs.Remove(this);
					}
					this._HD_XUAT.Entity = value;
					if ((value != null))
					{
						value.CHITIET_HD_XUATs.Add(this);
						this._MA_HD_XUAT = value.MA_HD_XUAT;
					}
					else
					{
						this._MA_HD_XUAT = default(string);
					}
					this.SendPropertyChanged("HD_XUAT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACV;
		
		private string _PHANCONG;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACVChanging(string value);
    partial void OnMACVChanged();
    partial void OnPHANCONGChanging(string value);
    partial void OnPHANCONGChanged();
    #endregion
		
		public CHUCVU()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACV
		{
			get
			{
				return this._MACV;
			}
			set
			{
				if ((this._MACV != value))
				{
					this.OnMACVChanging(value);
					this.SendPropertyChanging();
					this._MACV = value;
					this.SendPropertyChanged("MACV");
					this.OnMACVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHANCONG", DbType="NVarChar(50)")]
		public string PHANCONG
		{
			get
			{
				return this._PHANCONG;
			}
			set
			{
				if ((this._PHANCONG != value))
				{
					this.OnPHANCONGChanging(value);
					this.SendPropertyChanging();
					this._PHANCONG = value;
					this.SendPropertyChanged("PHANCONG");
					this.OnPHANCONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_NHANVIENs", ThisKey="MACV", OtherKey="MACV")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONVITINH")]
	public partial class DONVITINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADV;
		
		private string _DVTINH;
		
		private EntitySet<HANGHOA> _HANGHOAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnDVTINHChanging(string value);
    partial void OnDVTINHChanged();
    #endregion
		
		public DONVITINH()
		{
			this._HANGHOAs = new EntitySet<HANGHOA>(new Action<HANGHOA>(this.attach_HANGHOAs), new Action<HANGHOA>(this.detach_HANGHOAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVTINH", DbType="NVarChar(20)")]
		public string DVTINH
		{
			get
			{
				return this._DVTINH;
			}
			set
			{
				if ((this._DVTINH != value))
				{
					this.OnDVTINHChanging(value);
					this.SendPropertyChanging();
					this._DVTINH = value;
					this.SendPropertyChanged("DVTINH");
					this.OnDVTINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONVITINH_HANGHOA", Storage="_HANGHOAs", ThisKey="MADV", OtherKey="MADV")]
		public EntitySet<HANGHOA> HANGHOAs
		{
			get
			{
				return this._HANGHOAs;
			}
			set
			{
				this._HANGHOAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.DONVITINH = this;
		}
		
		private void detach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.DONVITINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANGHOA")]
	public partial class HANGHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHH;
		
		private string _MALOAI;
		
		private string _TENHH;
		
		private string _MADV;
		
		private string _XUATXU;
		
		private EntitySet<CHITIET_HD_NHAP> _CHITIET_HD_NHAPs;
		
		private EntitySet<CHITIET_HD_XUAT> _CHITIET_HD_XUATs;
		
		private EntityRef<DONVITINH> _DONVITINH;
		
		private EntityRef<LOAIHANG> _LOAIHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHHChanging(string value);
    partial void OnMAHHChanged();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENHHChanging(string value);
    partial void OnTENHHChanged();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnXUATXUChanging(string value);
    partial void OnXUATXUChanged();
    #endregion
		
		public HANGHOA()
		{
			this._CHITIET_HD_NHAPs = new EntitySet<CHITIET_HD_NHAP>(new Action<CHITIET_HD_NHAP>(this.attach_CHITIET_HD_NHAPs), new Action<CHITIET_HD_NHAP>(this.detach_CHITIET_HD_NHAPs));
			this._CHITIET_HD_XUATs = new EntitySet<CHITIET_HD_XUAT>(new Action<CHITIET_HD_XUAT>(this.attach_CHITIET_HD_XUATs), new Action<CHITIET_HD_XUAT>(this.detach_CHITIET_HD_XUATs));
			this._DONVITINH = default(EntityRef<DONVITINH>);
			this._LOAIHANG = default(EntityRef<LOAIHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHH
		{
			get
			{
				return this._MAHH;
			}
			set
			{
				if ((this._MAHH != value))
				{
					this.OnMAHHChanging(value);
					this.SendPropertyChanging();
					this._MAHH = value;
					this.SendPropertyChanged("MAHH");
					this.OnMAHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(10)")]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAIHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHH", DbType="NVarChar(50)")]
		public string TENHH
		{
			get
			{
				return this._TENHH;
			}
			set
			{
				if ((this._TENHH != value))
				{
					this.OnTENHHChanging(value);
					this.SendPropertyChanging();
					this._TENHH = value;
					this.SendPropertyChanged("TENHH");
					this.OnTENHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="Char(10)")]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					if (this._DONVITINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XUATXU", DbType="NVarChar(50)")]
		public string XUATXU
		{
			get
			{
				return this._XUATXU;
			}
			set
			{
				if ((this._XUATXU != value))
				{
					this.OnXUATXUChanging(value);
					this.SendPropertyChanging();
					this._XUATXU = value;
					this.SendPropertyChanged("XUATXU");
					this.OnXUATXUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CHITIET_HD_NHAP", Storage="_CHITIET_HD_NHAPs", ThisKey="MAHH", OtherKey="MAHH")]
		public EntitySet<CHITIET_HD_NHAP> CHITIET_HD_NHAPs
		{
			get
			{
				return this._CHITIET_HD_NHAPs;
			}
			set
			{
				this._CHITIET_HD_NHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CHITIET_HD_XUAT", Storage="_CHITIET_HD_XUATs", ThisKey="MAHH", OtherKey="MAHH")]
		public EntitySet<CHITIET_HD_XUAT> CHITIET_HD_XUATs
		{
			get
			{
				return this._CHITIET_HD_XUATs;
			}
			set
			{
				this._CHITIET_HD_XUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONVITINH_HANGHOA", Storage="_DONVITINH", ThisKey="MADV", OtherKey="MADV", IsForeignKey=true)]
		public DONVITINH DONVITINH
		{
			get
			{
				return this._DONVITINH.Entity;
			}
			set
			{
				DONVITINH previousValue = this._DONVITINH.Entity;
				if (((previousValue != value) 
							|| (this._DONVITINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVITINH.Entity = null;
						previousValue.HANGHOAs.Remove(this);
					}
					this._DONVITINH.Entity = value;
					if ((value != null))
					{
						value.HANGHOAs.Add(this);
						this._MADV = value.MADV;
					}
					else
					{
						this._MADV = default(string);
					}
					this.SendPropertyChanged("DONVITINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIHANG_HANGHOA", Storage="_LOAIHANG", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAIHANG LOAIHANG
		{
			get
			{
				return this._LOAIHANG.Entity;
			}
			set
			{
				LOAIHANG previousValue = this._LOAIHANG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIHANG.Entity = null;
						previousValue.HANGHOAs.Remove(this);
					}
					this._LOAIHANG.Entity = value;
					if ((value != null))
					{
						value.HANGHOAs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(string);
					}
					this.SendPropertyChanged("LOAIHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIET_HD_NHAPs(CHITIET_HD_NHAP entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = this;
		}
		
		private void detach_CHITIET_HD_NHAPs(CHITIET_HD_NHAP entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = null;
		}
		
		private void attach_CHITIET_HD_XUATs(CHITIET_HD_XUAT entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = this;
		}
		
		private void detach_CHITIET_HD_XUATs(CHITIET_HD_XUAT entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HD_NHAP")]
	public partial class HD_NHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_HD_NHAP;
		
		private string _MANCC;
		
		private string _MANV;
		
		private System.Nullable<System.DateTime> _NGAYLAP_NHAP;
		
		private System.Nullable<double> _TONGTIEN;
		
		private EntitySet<CHITIET_HD_NHAP> _CHITIET_HD_NHAPs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_HD_NHAPChanging(string value);
    partial void OnMA_HD_NHAPChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnNGAYLAP_NHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAP_NHAPChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public HD_NHAP()
		{
			this._CHITIET_HD_NHAPs = new EntitySet<CHITIET_HD_NHAP>(new Action<CHITIET_HD_NHAP>(this.attach_CHITIET_HD_NHAPs), new Action<CHITIET_HD_NHAP>(this.detach_CHITIET_HD_NHAPs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_HD_NHAP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_HD_NHAP
		{
			get
			{
				return this._MA_HD_NHAP;
			}
			set
			{
				if ((this._MA_HD_NHAP != value))
				{
					this.OnMA_HD_NHAPChanging(value);
					this.SendPropertyChanging();
					this._MA_HD_NHAP = value;
					this.SendPropertyChanged("MA_HD_NHAP");
					this.OnMA_HD_NHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Char(10)")]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP_NHAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP_NHAP
		{
			get
			{
				return this._NGAYLAP_NHAP;
			}
			set
			{
				if ((this._NGAYLAP_NHAP != value))
				{
					this.OnNGAYLAP_NHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP_NHAP = value;
					this.SendPropertyChanged("NGAYLAP_NHAP");
					this.OnNGAYLAP_NHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HD_NHAP_CHITIET_HD_NHAP", Storage="_CHITIET_HD_NHAPs", ThisKey="MA_HD_NHAP", OtherKey="MA_HD_NHAP")]
		public EntitySet<CHITIET_HD_NHAP> CHITIET_HD_NHAPs
		{
			get
			{
				return this._CHITIET_HD_NHAPs;
			}
			set
			{
				this._CHITIET_HD_NHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_HD_NHAP", Storage="_NHACUNGCAP", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.HD_NHAPs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.HD_NHAPs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HD_NHAP", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HD_NHAPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HD_NHAPs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIET_HD_NHAPs(CHITIET_HD_NHAP entity)
		{
			this.SendPropertyChanging();
			entity.HD_NHAP = this;
		}
		
		private void detach_CHITIET_HD_NHAPs(CHITIET_HD_NHAP entity)
		{
			this.SendPropertyChanging();
			entity.HD_NHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HD_XUAT")]
	public partial class HD_XUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA_HD_XUAT;
		
		private string _MAKH;
		
		private string _MANV;
		
		private System.Nullable<System.DateTime> _NGAYLAP_XUAT;
		
		private System.Nullable<double> _TONGTIEN;
		
		private EntitySet<CHITIET_HD_XUAT> _CHITIET_HD_XUATs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMA_HD_XUATChanging(string value);
    partial void OnMA_HD_XUATChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnNGAYLAP_XUATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAP_XUATChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public HD_XUAT()
		{
			this._CHITIET_HD_XUATs = new EntitySet<CHITIET_HD_XUAT>(new Action<CHITIET_HD_XUAT>(this.attach_CHITIET_HD_XUATs), new Action<CHITIET_HD_XUAT>(this.detach_CHITIET_HD_XUATs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_HD_XUAT", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA_HD_XUAT
		{
			get
			{
				return this._MA_HD_XUAT;
			}
			set
			{
				if ((this._MA_HD_XUAT != value))
				{
					this.OnMA_HD_XUATChanging(value);
					this.SendPropertyChanging();
					this._MA_HD_XUAT = value;
					this.SendPropertyChanged("MA_HD_XUAT");
					this.OnMA_HD_XUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP_XUAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP_XUAT
		{
			get
			{
				return this._NGAYLAP_XUAT;
			}
			set
			{
				if ((this._NGAYLAP_XUAT != value))
				{
					this.OnNGAYLAP_XUATChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP_XUAT = value;
					this.SendPropertyChanged("NGAYLAP_XUAT");
					this.OnNGAYLAP_XUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HD_XUAT_CHITIET_HD_XUAT", Storage="_CHITIET_HD_XUATs", ThisKey="MA_HD_XUAT", OtherKey="MA_HD_XUAT")]
		public EntitySet<CHITIET_HD_XUAT> CHITIET_HD_XUATs
		{
			get
			{
				return this._CHITIET_HD_XUATs;
			}
			set
			{
				this._CHITIET_HD_XUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HD_XUAT", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HD_XUATs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HD_XUATs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HD_XUAT", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HD_XUATs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HD_XUATs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIET_HD_XUATs(CHITIET_HD_XUAT entity)
		{
			this.SendPropertyChanging();
			entity.HD_XUAT = this;
		}
		
		private void detach_CHITIET_HD_XUATs(CHITIET_HD_XUAT entity)
		{
			this.SendPropertyChanging();
			entity.HD_XUAT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _TEN;
		
		private string _DCHI;
		
		private string _DTHOAI;
		
		private string _MALOAI;
		
		private EntitySet<HD_XUAT> _HD_XUATs;
		
		private EntityRef<LOAIKHACH> _LOAIKHACH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnDCHIChanging(string value);
    partial void OnDCHIChanged();
    partial void OnDTHOAIChanging(string value);
    partial void OnDTHOAIChanged();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HD_XUATs = new EntitySet<HD_XUAT>(new Action<HD_XUAT>(this.attach_HD_XUATs), new Action<HD_XUAT>(this.detach_HD_XUATs));
			this._LOAIKHACH = default(EntityRef<LOAIKHACH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(30)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCHI", DbType="NVarChar(20)")]
		public string DCHI
		{
			get
			{
				return this._DCHI;
			}
			set
			{
				if ((this._DCHI != value))
				{
					this.OnDCHIChanging(value);
					this.SendPropertyChanging();
					this._DCHI = value;
					this.SendPropertyChanged("DCHI");
					this.OnDCHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTHOAI", DbType="Char(10)")]
		public string DTHOAI
		{
			get
			{
				return this._DTHOAI;
			}
			set
			{
				if ((this._DTHOAI != value))
				{
					this.OnDTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DTHOAI = value;
					this.SendPropertyChanged("DTHOAI");
					this.OnDTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(10)")]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAIKHACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HD_XUAT", Storage="_HD_XUATs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<HD_XUAT> HD_XUATs
		{
			get
			{
				return this._HD_XUATs;
			}
			set
			{
				this._HD_XUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIKHACH_KHACHHANG", Storage="_LOAIKHACH", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAIKHACH LOAIKHACH
		{
			get
			{
				return this._LOAIKHACH.Entity;
			}
			set
			{
				LOAIKHACH previousValue = this._LOAIKHACH.Entity;
				if (((previousValue != value) 
							|| (this._LOAIKHACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIKHACH.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._LOAIKHACH.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(string);
					}
					this.SendPropertyChanged("LOAIKHACH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HD_XUATs(HD_XUAT entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HD_XUATs(HD_XUAT entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIHANG")]
	public partial class LOAIHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI;
		
		private string _TENLOAI;
		
		private EntitySet<HANGHOA> _HANGHOAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAIHANG()
		{
			this._HANGHOAs = new EntitySet<HANGHOA>(new Action<HANGHOA>(this.attach_HANGHOAs), new Action<HANGHOA>(this.detach_HANGHOAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(50)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIHANG_HANGHOA", Storage="_HANGHOAs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<HANGHOA> HANGHOAs
		{
			get
			{
				return this._HANGHOAs;
			}
			set
			{
				this._HANGHOAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.LOAIHANG = this;
		}
		
		private void detach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.LOAIHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIKHACH")]
	public partial class LOAIKHACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI;
		
		private string _TENLOAI;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAIKHACH()
		{
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(50)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIKHACH_KHACHHANG", Storage="_KHACHHANGs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIKHACH = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIKHACH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANCC;
		
		private string _TENNCC;
		
		private string _DCHI;
		
		private string _DTHOAI;
		
		private EntitySet<HD_NHAP> _HD_NHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    partial void OnDCHIChanging(string value);
    partial void OnDCHIChanged();
    partial void OnDTHOAIChanging(string value);
    partial void OnDTHOAIChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._HD_NHAPs = new EntitySet<HD_NHAP>(new Action<HD_NHAP>(this.attach_HD_NHAPs), new Action<HD_NHAP>(this.detach_HD_NHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(50)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCHI", DbType="NVarChar(50)")]
		public string DCHI
		{
			get
			{
				return this._DCHI;
			}
			set
			{
				if ((this._DCHI != value))
				{
					this.OnDCHIChanging(value);
					this.SendPropertyChanging();
					this._DCHI = value;
					this.SendPropertyChanged("DCHI");
					this.OnDCHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTHOAI", DbType="Char(10)")]
		public string DTHOAI
		{
			get
			{
				return this._DTHOAI;
			}
			set
			{
				if ((this._DTHOAI != value))
				{
					this.OnDTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DTHOAI = value;
					this.SendPropertyChanged("DTHOAI");
					this.OnDTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_HD_NHAP", Storage="_HD_NHAPs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<HD_NHAP> HD_NHAPs
		{
			get
			{
				return this._HD_NHAPs;
			}
			set
			{
				this._HD_NHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HD_NHAPs(HD_NHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_HD_NHAPs(HD_NHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TENNV;
		
		private string _MACV;
		
		private string _GIOITINH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _DCHI;
		
		private string _DTHOAI;
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
		private EntitySet<HD_NHAP> _HD_NHAPs;
		
		private EntitySet<HD_XUAT> _HD_XUATs;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnMACVChanging(string value);
    partial void OnMACVChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnDCHIChanging(string value);
    partial void OnDCHIChanged();
    partial void OnDTHOAIChanging(string value);
    partial void OnDTHOAIChanged();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._HD_NHAPs = new EntitySet<HD_NHAP>(new Action<HD_NHAP>(this.attach_HD_NHAPs), new Action<HD_NHAP>(this.detach_HD_NHAPs));
			this._HD_XUATs = new EntitySet<HD_XUAT>(new Action<HD_XUAT>(this.attach_HD_XUATs), new Action<HD_XUAT>(this.detach_HD_XUATs));
			this._CHUCVU = default(EntityRef<CHUCVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(50)")]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACV", DbType="Char(10)")]
		public string MACV
		{
			get
			{
				return this._MACV;
			}
			set
			{
				if ((this._MACV != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACVChanging(value);
					this.SendPropertyChanging();
					this._MACV = value;
					this.SendPropertyChanged("MACV");
					this.OnMACVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(10)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCHI", DbType="NVarChar(50)")]
		public string DCHI
		{
			get
			{
				return this._DCHI;
			}
			set
			{
				if ((this._DCHI != value))
				{
					this.OnDCHIChanging(value);
					this.SendPropertyChanging();
					this._DCHI = value;
					this.SendPropertyChanged("DCHI");
					this.OnDCHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTHOAI", DbType="Char(10)")]
		public string DTHOAI
		{
			get
			{
				return this._DTHOAI;
			}
			set
			{
				if ((this._DTHOAI != value))
				{
					this.OnDTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DTHOAI = value;
					this.SendPropertyChanged("DTHOAI");
					this.OnDTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="Char(15)")]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="Char(15)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HD_NHAP", Storage="_HD_NHAPs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<HD_NHAP> HD_NHAPs
		{
			get
			{
				return this._HD_NHAPs;
			}
			set
			{
				this._HD_NHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HD_XUAT", Storage="_HD_XUATs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<HD_XUAT> HD_XUATs
		{
			get
			{
				return this._HD_XUATs;
			}
			set
			{
				this._HD_XUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_CHUCVU", ThisKey="MACV", OtherKey="MACV", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MACV = value.MACV;
					}
					else
					{
						this._MACV = default(string);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HD_NHAPs(HD_NHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HD_NHAPs(HD_NHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HD_XUATs(HD_XUAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HD_XUATs(HD_XUAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
}
#pragma warning restore 1591
